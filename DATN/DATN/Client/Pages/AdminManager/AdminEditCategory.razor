@page "/editcategory/{CategoryId:int}"
@using DATN.Shared
@layout LayoutAdmin
@inject HttpClient httpClient
@inject NavigationManager Navigation

<div class="row justify-content-center mt-3 p-5">
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-header bg-danger text-white">
                <h5 class="text-center mb-0">CHỈNH SỬA DANH MỤC</h5>
            </div>
            <div class="card-body">
                @if (isLoaded)
                {
                    <EditForm Model="@cate" OnValidSubmit="EditCate" Context="editFormContext">
                        <DataAnnotationsValidator />
                        <div class="text-danger mb-3">
                            <ValidationSummary />
                        </div>

                        <div class="form-group">
                            <label for="CategoryName" class="control-label"><strong>Tên danh mục</strong></label>
                            <input id="CategoryName" @bind="cate.CategoryName" class="form-control" placeholder="Nhập Tên" />
                            <ValidationMessage For="@(() => cate.CategoryName)" />
                        </div>

                        <div class="form-group">
                            <label for="CategoryDescription" class="control-label"><strong>Ghi chú</strong></label>
                            <input id="CategoryDescription" @bind="cate.CategoryDescription" class="form-control" placeholder="Nội dung" />
                            <ValidationMessage For="@(() => cate.CategoryDescription)" />
                        </div>

                        <div class="form-group text-center">
                            <div class="d-flex justify-content-center">
                                <button type="submit" class="btn btn-danger mx-2">Cập Nhật</button>
                                <a href="/admincategory" class="btn btn-secondary mx-2">Quay Về</a>
                            </div>
                        </div>
                    </EditForm>
                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success mt-3">
                            @successMessage
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3">
                            @errorMessage
                        </div>
                    }
                }
                else
                {
                    <p>Loading...</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public int CategoryId { get; set; }

    private string errorMessage;
    private string successMessage;
    private DATN.Shared.Category cate = new DATN.Shared.Category();
    private bool isLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadEditCategory();
        isLoaded = true;
    }

    private async Task LoadEditCategory()
    {
        try
        {
            var response = await httpClient.GetFromJsonAsync<Category>($"api/Category/GetCategoryById/{CategoryId}");
            if (response != null)
            {
                cate = response;
            }
            else
            {
                errorMessage = "Không tìm thấy danh mục.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Đã xảy ra lỗi: {ex.Message}";
        }
    }

    private async Task EditCate()
    {
        try
        {
            var response = await httpClient.PutAsJsonAsync($"api/Category/EditCategory/{CategoryId}", cate);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Cập nhật thành công!";
                errorMessage = string.Empty;
                Navigation.NavigateTo("/admincategory");
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                errorMessage = $"Lỗi khi cập nhật danh mục: {errorContent}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Đã xảy ra lỗi: {ex.Message}";
            successMessage = string.Empty;
        }

        StateHasChanged();
    }
}
