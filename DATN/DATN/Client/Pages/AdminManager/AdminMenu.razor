@page "/adminmenu"
@using DATN.Shared
@layout LayoutAdmin
@inject HttpClient httpClient
@inject NavigationManager Navigation


<style>
    .product-table-container {
        max-height: 600px;
        overflow-y: auto;
    }

        .product-table-container table {
            width: 100%;
        }

    .search-bar, .filter-bar {
        margin-bottom: 20px;
    }
</style>

<AuthorizeView Roles="admin,employee">
    <Authorized>
        @if (isLoaded)
        {
            <div class="col-md-12 row">
                <div class="col-md-6">
                    <button class="btn btn-success" @onclick="() => CreateMenu()">Add Menu</button>
                    <hr />
                    <h4>Menu</h4>
                    <div class="search-bar">
                        <input type="text" class="form-control" placeholder="Search Menu..." @oninput="Filter" />
                    </div>
                    <div class="product-table-container">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>MenuName</th>
                                    <th>PriceCombo</th>
                                    <th>MenuDescription</th>
                                    <th></th>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var item in filter)
                                {
                                    if (item != null)
                                    {
                                        <tr>
                                            <td>@item.MenuName</td>
                                            <td>@item.PriceCombo</td>
                                            <td>@item.MenuDescription</td>
                                            <td class="text-center">
                                                @if (!item.IsDeleted)
                                                {
                                                    <button class="btn btn-primary" @onclick="() => EditMenu(item.MenuId)">Edit</button>
                                                    <button class="btn btn-danger" @onclick="() => HideMenu(item.MenuId)">Hide</button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-warning" @onclick="() => RestoreMenu(item.MenuId)">Restore</button>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-6">
                    <button class="btn btn-success" @onclick="() => CreateMenuItem()">Add MenuItem</button>
                    <hr />
                    <h4>MenuItem</h4>
                    <div class="search-bar">
                        <input type="text" class="form-control" placeholder="Search MenuItem..."  @oninput="FilterMenuItem" />
                    </div>
                    <div class="product-table-container">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Menu</th>
                                    <th>Product</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in filtermenuitem)
                                {
                                    if (item != null)
                                    {
                                        var connectMenu = listMenu.FirstOrDefault(p => p.MenuId == item.MenuId);

                                        if (connectMenu != null)
                                        {
                                            var connectProduct = listProduct.FirstOrDefault(p => p.ProductId == item.ProductId);

                                            if (connectProduct != null)
                                            {
                                                <tr>
                                                    <td>@connectMenu.MenuName</td>
                                                    <td>@connectProduct.ProductName</td>
                                                    <td class="text-center">
                                                        @if (!item.IsDeleted)
                                                        {
                                                            <button class="btn btn-primary" @onclick="() => EditMenuItem(item.MenuItemId)">Edit</button>
                                                            <button class="btn btn-danger" @onclick="() => HideMenuItem(item.MenuItemId)">Hide</button>
                                                        }
                                                        else
                                                        {
                                                            <button class="btn btn-warning" @onclick="() => RestoreMenuItem(item.MenuItemId)">Restore</button>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else if (!string.IsNullOrEmpty(errorMessage))
        {
            <p class="text-danger">@errorMessage</p>
        }
        else
        {
            <p>Loading...</p>
        }
    </Authorized>
    <NotAuthorized>
        <h3>Không có quyền truy cập</h3>
    </NotAuthorized>
</AuthorizeView>
