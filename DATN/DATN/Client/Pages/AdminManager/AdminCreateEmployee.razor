@page "/createemployee"
@using DATN.Shared
@inject HttpClient httpClient
@inject NavigationManager Navigation

<div class="row justify-content-center mt-3">
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-header bg-danger text-white">
                <h5 class="text-center mb-0">Thêm DANH MỤC</h5>
            </div>
            <div class="card-body">
                @if (isLoaded)
                {
                    <EditForm Model="@employee" OnValidSubmit="CreateEmployee" Context="editFormContext">
                        <DataAnnotationsValidator />
                        <div class="text-danger mb-3">
                            <ValidationSummary />
                        </div>

                        <div class="form-group">
                            <label for="EmployeeName" class="control-label"><strong>EmployeeName</strong></label>
                            <input id="EmployeeName" @bind="employee.EmployeeName" class="form-control" placeholder="EmployeeName" />
                            <ValidationMessage For="@(() => employee.EmployeeName)" />
                        </div>

                        <div class="form-group">
                            <label for="Address" class="control-label"><strong>Address</strong></label>
                            <input id="Address" @bind="employee.Address" class="form-control" placeholder="Address" />
                            <ValidationMessage For="@(() => employee.Address)" />
                        </div>

                        <div class="form-group">
                            <label for="PhoneNumber" class="control-label"><strong>PhoneNumber</strong></label>
                            <input type="number" id="PhoneNumber" @bind="employee.PhoneNumber" class="form-control" placeholder="PhoneNumber" />
                            <ValidationMessage For="@(() => employee.PhoneNumber)" />
                        </div>

                        <div class="form-group">
                            <label for="Email" class="control-label"><strong>Email</strong></label>
                            <input type="email" id="Email" @bind="employee.Email" class="form-control" placeholder="Email" />
                            <ValidationMessage For="@(() => employee.Email)" />
                        </div>


                        <div class="form-group">
                            <label for="Position" class="control-label"><strong>Position</strong></label>
                            <input id="Position" @bind="employee.Position" class="form-control" placeholder="Position" />
                            <ValidationMessage For="@(() => employee.Position)" />
                        </div>

                        <div class="form-group">
                            <label for="HireDate" class="control-label"><strong>HireDate</strong></label>
                            <input type="date" id="HireDate" @bind="employee.HireDate" class="form-control" placeholder="HireDate" />
                            <ValidationMessage For="@(() => employee.HireDate)" />
                        </div>

                        <div class="form-group">
                            <label for="TotalRewardPoint" class="control-label"><strong>Salary</strong></label>
                            <input type="number" id="TotalRewardPoint" @bind="employee.Salary" class="form-control" placeholder="Salary" />
                            <ValidationMessage For="@(() => employee.Salary)" />
                        </div>

                        <div class="form-group">
                            <label for="AccountId" class="control-label"><strong>AccountId</strong></label>
                            <input id="AccountId" @bind="employee.AccountId" class="form-control" placeholder="AccountId" />
                            <ValidationMessage For="@(() => employee.AccountId)" />
                        </div>

                        <div class="form-group text-center">
                            <div class="d-flex justify-content-center">
                                <button type="submit" class="btn btn-danger mx-2">Thêm</button>
                                <a class="btn btn-secondary mx-2" data-bs-target="#carouselExample" data-bs-slide="prev">Quay Về</a>
                            </div>
                        </div>
                    </EditForm>

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success mt-3">
                            @successMessage
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3">
                            @errorMessage
                        </div>
                    }
                }
                else
                {
                    <p>Loading...</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string errorMessage;
    private string successMessage;
    private DATN.Shared.Employee employee = new DATN.Shared.Employee();
    private IBrowserFile selectedFile;
    private bool isLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        isLoaded = true;
    }

    private async Task CreateEmployee()
    {

        try
        {
            var response = await httpClient.PostAsJsonAsync("api/Employee/AddEmployee", employee);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Thêm thành công!";
                errorMessage = string.Empty;

            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                errorMessage = $"error: {errorContent}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Đã xảy ra lỗi: {ex.Message}";
            successMessage = string.Empty;
        }

        StateHasChanged();

        Navigation.NavigateTo("/createemployeeshifte");
        //--------------------------------

    }


}
