@page "/createcategory"


@using DATN.Shared
@layout LayoutAdmin
@inject HttpClient httpClient
@inject NavigationManager Navigation
@inject LocalStorageService _localStorageService
@inject IJSRuntime JS

<div class="container-fluid p-5 bg-secondary mt-3" style="height: 900px;">
    <div class="col-md-6 m-auto">
        <div class="card shadow-sm bg-white">
            <div class="text-black">
                <h5 class="m-3 p-4 fs-2 text-black">Thêm Danh Mục</h5>
            </div>
            <div class="card-body col-md-12 m-auto">
                @if (isLoaded)
                {
                    <EditForm Model="@cate" OnValidSubmit="CreateCate">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group col-md-12 mb-3">
                            <label for="CategoryName" class="control-label"><strong>CategoryName</strong></label>
                            <input id="CategoryName" @bind="cate.CategoryName" class="form-control" placeholder="CategoryName" required/>
                            <ValidationMessage For="@(() => cate.CategoryName)" />
                        </div>

                        <div class="form-group col-md-12 mb-3">
                            <label for="CategoryDescription" class="control-label"><strong>CategoryDescription</strong></label>
                            <input id="CategoryDescription" @bind="cate.CategoryDescription" class="form-control" placeholder="CategoryDescription" required />
                            <ValidationMessage For="@(() => cate.CategoryDescription)" />
                        </div>

                        <div class="form-group text-center mt-3">
                            <button type="submit" class="btn btn-danger mx-2">Thêm</button>
                            <a href="/admincategory" class="btn btn-secondary mx-2">Trở Về</a>
                        </div>
                    </EditForm>

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success mt-3 text-center">
                            @successMessage
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3 text-center">
                            @errorMessage
                        </div>
                    }
                }
                else
                {
                    <p>Loading...</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string errorMessage;
    private string successMessage;
    private DATN.Shared.Category cate = new DATN.Shared.Category();
    private IBrowserFile selectedFile;
    private bool isLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        isLoaded = true;
    }

    private async Task CreateCate()
    {
        try
        {
            var response = await httpClient.PostAsJsonAsync("api/Category/AddCategory", cate);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Thêm thành công!";
                errorMessage = string.Empty;
                Navigation.NavigateTo("/admincategory");
                await JS.InvokeVoidAsync("showAlert","success", "Thành Công");
                StateHasChanged();
            }
            else
            {
                await JS.InvokeVoidAsync("showAlert", "error", "Lỗi", "Thất Bại");
                Navigation.NavigateTo("/admincategory");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("showAlert", "error", "Lỗi", "Thất Bại");
            Navigation.NavigateTo("/admincategory");
        }
    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }
}
