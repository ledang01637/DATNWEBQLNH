@page "/createproduct"
@using DATN.Shared
@inject HttpClient httpClient
@inject NavigationManager Navigation

<div class="row justify-content-center mt-3 p-5">
    <div class="col-md-6">
        <div class="card shadow-sm">
            <div class="card-header bg-danger text-white">
                <h5 class="text-center mb-0">add Product</h5>
            </div>
            <div class="card-body">
                @if (isLoaded)
                {
                    <EditForm Model="@prod" OnValidSubmit="CreateProd" Context="editFormContext">
                        <DataAnnotationsValidator />
                        <div class="text-danger mb-3">
                            <ValidationSummary />
                        </div>

                        <div class="form-group">
                            <label for="UnitId" class="control-label"><strong>Unit</strong></label>
                            <input id="UnitId" @bind="prod.UnitId" class="form-control" placeholder="UnitId" />
                            <ValidationMessage For="@(() => prod.UnitId)" />
                        </div>

                        <div class="form-group">
                            <label for="ProductName" class="control-label"><strong>ProductName</strong></label>
                            <input id="ProductName" @bind="prod.ProductName" class="form-control" placeholder="ProductName" />
                            <ValidationMessage For="@(() => prod.ProductName)" />
                        </div>

                        <div class="form-group">
                            <label for="Price" class="control-label"><strong>Price</strong></label>
                            <input type="number" id="Price" @bind="prod.Price" class="form-control" placeholder="Price" />
                            <ValidationMessage For="@(() => prod.Price)" />
                        </div>

                        <div class="form-group">
                            <label for="CategoryId" class="control-label"><strong>CategoryId</strong></label>
                            <input id="CategoryId" @bind="prod.CategoryId" class="form-control" placeholder="CategoryId" />
                            <ValidationMessage For="@(() => prod.CategoryId)" />
                        </div>

                        <div class="form-group">
                            <label for="ProductDescripntion" class="control-label"><strong>Product Description</strong></label>
                            <textarea id="ProductDescripntion" @bind="prod.ProductDescripntion" class="form-control" placeholder="Enter product description"></textarea>
                            <ValidationMessage For="@(() => prod.ProductDescripntion)" />
                        </div>


                        <div class="form-group">
                            <label for="ProductImage" class="control-label"><strong>Chọn ảnh</strong></label>
                            <input id="ProductImage" @bind="prod.ProductImage" class="form-control" />
                            <ValidationMessage For="@(() => prod.ProductImage)" />
                        </div>

                        <div class="form-group text-center">
                            <div class="d-flex justify-content-center">
                                <button type="submit" class="btn btn-danger mx-2">Thêm</button>
                                <a href="/admincategory" class="btn btn-secondary mx-2">Quay Về</a>
                            </div>
                        </div>
                    </EditForm>
                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success mt-3">
                            @successMessage
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3">
                            @errorMessage
                        </div>
                    }
                }
                else
                {
                    <p>Loading...</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string errorMessage;
    private string successMessage;
    private DATN.Shared.Product prod = new DATN.Shared.Product();
    private IBrowserFile selectedFile;
    private bool isLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        isLoaded = true;
    }

    private async Task CreateProd()
    {
        try
        {
            var response = await httpClient.PostAsJsonAsync("api/Product/AddProduct", prod);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Thêm thành công!";
                errorMessage = string.Empty;
                Navigation.NavigateTo("/adminproduct");
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                errorMessage = $"Error : {errorContent}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Đã xảy ra lỗi: {ex.Message}";
            successMessage = string.Empty;
        }

        StateHasChanged();
    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }
}
